name: build
on:
  push:
    paths-ignore:
     - 'README.md'
     - 'android_app.yml'
     - 'filemanager.yml'
     - 'python_app.yml'
  pull_request:
    paths-ignore:
     - 'README.md'
     - 'android_app.yml'
     - 'filemanager.yml'
     - 'python_app.yml'
  workflow_dispatch:
    inputs:
      version:
        description: dummy
        default: dummy

jobs:
  update-nightly-tag:
    name: Update nightly release tag
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    permissions:
        contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Move nightly tag to head for nightly release
        run: git tag -f nightly && git push origin nightly -f

  build:
    runs-on: ubuntu-22.04
    needs: [update-nightly-tag]
    if: |
      always() &&
      (needs.update-nightly-tag.result == 'success' ||
        needs.update-nightly-tag.result == 'skipped')
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: test docker
      run: |
        docker --version

    - name: list java class files
      run: |
        find . -name '*.class'

    - name: delete java class files
      run: |
        find . -name '*.class'|xargs rm -v

    - name: build and test android version
      run: |
        export RUNTESTS=1 ; ./compile_docker_all.sh || (cat compile.log; exit 1)

    - name: Rename artifact for nightly upload
      run: |
        cp -av ./003_src_iocipher/libiocipher2-c/build/outputs/aar/libiocipher2-c-release.aar ./
        cp -av ./003_src_iocipher/libiocipher2-c/build/outputs/aar/libiocipher2-c-debug.aar ./
        cp -av ./003_src_iocipher/stub_work/local_maven_iocipher_*.zip ./

    - name: Upload to nightly release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        allowUpdates: true
        tag: nightly
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        prerelease: true
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "local_maven_iocipher_*.zip,libiocipher2-c-release.aar,libiocipher2-c-debug.aar,compile.log"


    - name: Upload to versioned release
      if: contains(github.ref, 'refs/tags/v')
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "local_maven_iocipher_*.zip,libiocipher2-c-release.aar,libiocipher2-c-debug.aar,compile.log"


    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '8'

    - name: build and test linux version
      run: |
        cd 003_src_iocipher/linux_jni/c_src && ./compile_linux_c.sh || (cat compile.log; exit 1)

    - name: install mingw cross compiler
      run: |
           sudo apt-get update
           DEBIAN_FRONTEND=noninteractive \
           sudo apt-get install -y --no-install-recommends \
           wine libwine-dev libwine wine64 wine64-tools \
           make wget git coreutils autoconf \
           libtool pkg-config gcc-mingw-w64-x86-64 \
           gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 \
           mingw-w64-tools pkg-config-mingw-w64-x86-64 \
           mingw-w64-x86-64-dev

    - name: build windows version
      run: |
        cd 003_src_iocipher/linux_jni/c_src && ./compile_win_c.sh || (cat compile.win.log; exit 1)

    - name: rename linux c_src compile.log
      run: |
        cp -v 003_src_iocipher/linux_jni/c_src/compile.log ./compile_linux_c_src.log

    - name: rename windows c_src compile.log
      run: |
        cp -v 003_src_iocipher/linux_jni/c_src/compile.win.log ./compile_win_c_src.log

    - name: move linux c_src jar
      run: |
        cp -v 003_src_iocipher/linux_jni/c_src/iocipher_linux-*.jar ./

    - name: Upload to nightly release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push' && github.ref == 'refs/heads/master'
      with:
        allowUpdates: true
        tag: nightly
        omitBodyDuringUpdate: true
        omitNameDuringUpdate: true
        prerelease: true
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "iocipher_linux-*.jar,compile_linux_c_src.log,compile_win_c_src.log"

    - name: Upload to versioned release
      if: contains(github.ref, 'refs/tags/v')
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: "iocipher_linux-*.jar,compile_linux_c_src.log,compile_win_c_src.log"


    - name: raw speed test on linux
      run: |
        cd 003_src_iocipher/linux_jni/c_src && ./speedtest_linux_c.sh || exit 1

    - name: check that all java classes are for java 1.8
      run: |
        tools/check_java_classes_version.sh
